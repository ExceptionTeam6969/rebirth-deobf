//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\23204\Desktop\cn×îÇ¿·´±àÒëÆ÷\1.12 stable mappings"!

//Decompiled by Procyon!

package me.rebirthclient.mod.modules.impl.exploit;

import net.minecraft.network.play.server.*;
import net.minecraft.entity.player.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import me.rebirthclient.api.events.impl.*;
import java.util.function.*;
import net.minecraftforge.fml.common.eventhandler.*;
import me.rebirthclient.mod.modules.*;
import java.util.concurrent.*;
import net.minecraft.entity.*;
import net.minecraft.entity.item.*;
import java.util.*;

public class FakePearl extends Module
{
    private final Queue packets;
    private int thrownPearlId;
    
    private void lambda$onReceivePacket$1(final SPacketSpawnObject sPacketSpawnObject, final EntityPlayer entityPlayer) {
        if (entityPlayer.equals((Object)FakePearl.mc.player)) {
            if (!FakePearl.mc.player.onGround) {
                return;
            }
            FakePearl.mc.player.motionX = 0.0;
            FakePearl.mc.player.motionY = 0.0;
            FakePearl.mc.player.motionZ = 0.0;
            FakePearl.mc.player.movementInput.moveForward = 0.0f;
            FakePearl.mc.player.movementInput.moveStrafe = 0.0f;
            FakePearl.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Position(FakePearl.mc.player.posX, FakePearl.mc.player.posY + 1.0, FakePearl.mc.player.posZ, false));
            this.thrownPearlId = sPacketSpawnObject.getEntityID();
        }
    }
    
    private static double lambda$onReceivePacket$0(final SPacketSpawnObject sPacketSpawnObject, final EntityPlayer entityPlayer) {
        return entityPlayer.getDistance(sPacketSpawnObject.getX(), sPacketSpawnObject.getY(), sPacketSpawnObject.getZ());
    }
    
    @SubscribeEvent(priority = EventPriority.HIGHEST)
    public void onReceivePacket(final PacketEvent.Receive receive) {
        if (fullNullCheck()) {
            return;
        }
        if (receive.isCanceled()) {
            return;
        }
        if (receive.getPacket() instanceof SPacketSpawnObject) {
            final SPacketSpawnObject sPacketSpawnObject = (SPacketSpawnObject)receive.getPacket();
            if (sPacketSpawnObject.getType() == 65) {
                FakePearl.mc.world.playerEntities.stream().min(Comparator.comparingDouble((ToDoubleFunction<? super Object>)FakePearl::lambda$onReceivePacket$0)).ifPresent(this::lambda$onReceivePacket$1);
            }
        }
    }
    
    public FakePearl() {
        super("FakePearl", "T\u7709rkiye exploit", Category.EXPLOIT);
        this.packets = new ConcurrentLinkedQueue();
        this.thrownPearlId = -1;
    }
    
    @Override
    public void onTick() {
        if (this.thrownPearlId != -1) {
            final Iterator<Entity> iterator = FakePearl.mc.world.loadedEntityList.iterator();
            if (iterator.hasNext()) {
                final Entity entity = iterator.next();
                if (entity.getEntityId() == this.thrownPearlId && entity instanceof EntityEnderPearl && ((EntityEnderPearl)entity).isDead) {
                    this.thrownPearlId = -1;
                }
            }
        }
        else if (!this.packets.isEmpty()) {
            do {
                FakePearl.mc.player.connection.sendPacket((Packet)this.packets.poll());
            } while (!this.packets.isEmpty());
        }
    }
    
    @SubscribeEvent
    public void onPacketSend(final PacketEvent.Send send) {
        if (this.thrownPearlId != -1 && send.getPacket() instanceof CPacketPlayer) {
            this.packets.add(send.getPacket());
            send.setCanceled(true);
        }
    }
}
