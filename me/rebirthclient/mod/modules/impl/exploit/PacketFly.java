//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\23204\Desktop\cn×îÇ¿·´±àÒëÆ÷\1.12 stable mappings"!

//Decompiled by Procyon!

package me.rebirthclient.mod.modules.impl.exploit;

import me.rebirthclient.mod.modules.settings.*;
import java.util.*;
import net.minecraft.network.*;
import net.minecraftforge.fml.common.eventhandler.*;
import me.rebirthclient.mod.modules.*;
import java.util.function.*;
import io.netty.util.internal.*;
import java.util.concurrent.*;
import net.minecraft.network.play.server.*;
import net.minecraft.client.gui.*;
import me.rebirthclient.api.events.impl.*;
import net.minecraft.util.math.*;
import net.minecraft.network.play.client.*;
import me.rebirthclient.api.util.*;

public class PacketFly extends Module
{
    private int flightCounter;
    public final Setting nocliperino;
    public final Setting setID;
    public final Setting antiFactor;
    public final Setting strafeFactor;
    public final Setting antiRotation;
    public final Setting setPos;
    public final Setting flightMode;
    public final Setting flight;
    public final Setting clearIDs;
    private final Map teleportmap;
    public final Setting loops;
    private int teleportID;
    private final Set packets;
    public final Setting clearMap;
    public final Setting sendTeleport;
    public final Setting invalidPacket;
    public final Setting clearTime;
    public static PacketFly instance;
    public final Setting setMove;
    public final Setting extraFactor;
    
    private double[] getMotion(final double n) {
        float moveForward = PacketFly.mc.player.movementInput.moveForward;
        float moveStrafe = PacketFly.mc.player.movementInput.moveStrafe;
        float n2 = PacketFly.mc.player.prevRotationYaw + (PacketFly.mc.player.rotationYaw - PacketFly.mc.player.prevRotationYaw) * PacketFly.mc.getRenderPartialTicks();
        if (moveForward != 0.0f) {
            if (moveStrafe > 0.0f) {
                n2 += ((moveForward > 0.0f) ? -45 : 45);
            }
            else if (moveStrafe < 0.0f) {
                n2 += ((moveForward > 0.0f) ? 45 : -45);
            }
            moveStrafe = 0.0f;
            if (moveForward > 0.0f) {
                moveForward = 1.0f;
            }
            else if (moveForward < 0.0f) {
                moveForward = -1.0f;
            }
        }
        return new double[] { moveForward * n * -Math.sin(Math.toRadians(n2)) + moveStrafe * n * Math.cos(Math.toRadians(n2)), moveForward * n * Math.cos(Math.toRadians(n2)) - moveStrafe * n * -Math.sin(Math.toRadians(n2)) };
    }
    
    private void packetSender(final CPacketPlayer cPacketPlayer) {
        this.packets.add(cPacketPlayer);
        PacketFly.mc.player.connection.sendPacket((Packet)cPacketPlayer);
    }
    
    @SubscribeEvent
    public void onPushOutOfBlocks(final PushEvent pushEvent) {
        if (fullNullCheck()) {
            return;
        }
        if (pushEvent.getStage() == 1) {
            pushEvent.setCanceled(true);
        }
    }
    
    private boolean lambda$new$0(final Integer n) {
        return this.flight.isOpen();
    }
    
    public PacketFly() {
        super("PacketFly", "Uses packets to fly!", Category.EXPLOIT);
        this.flight = this.add(new Setting("Flight", true).setParent());
        this.flightMode = this.add(new Setting("FMode", 0, 0, 1, this::lambda$new$0));
        this.antiFactor = this.add(new Setting("AntiFactor", 1.0, 0.1, 3.0));
        this.extraFactor = this.add(new Setting("ExtraFactor", 1.0, 0.1, 3.0));
        this.strafeFactor = this.add(new Setting("StrafeFactor", true));
        this.loops = this.add(new Setting("Loops", 1, 1, 10));
        this.clearMap = this.add(new Setting("ClearMap", true));
        this.clearTime = this.add(new Setting("ClearTime", 30, 1, 500));
        this.clearIDs = this.add(new Setting("ClearIDs", true));
        this.antiRotation = this.add(new Setting("AntiRotation", false));
        this.setID = this.add(new Setting("SetID", true));
        this.setMove = this.add(new Setting("SetMove", false));
        this.nocliperino = this.add(new Setting("NoClip", false));
        this.sendTeleport = this.add(new Setting("Teleport", true));
        this.setPos = this.add(new Setting("SetPos", false));
        this.invalidPacket = this.add(new Setting("InvalidPacket", true));
        this.packets = (Set)new ConcurrentSet();
        this.teleportmap = new ConcurrentHashMap();
        this.flightCounter = 0;
        this.teleportID = 0;
        PacketFly.instance = this;
    }
    
    @SubscribeEvent
    public void onUpdateWalkingPlayer(final UpdateWalkingPlayerEvent p0) {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     3: ifeq            7
        //     6: return         
        //     7: aload_1        
        //     8: invokevirtual   me/rebirthclient/api/events/impl/UpdateWalkingPlayerEvent.getStage:()I
        //    11: iconst_1       
        //    12: if_icmpne       16
        //    15: return         
        //    16: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //    19: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //    22: dconst_0       
        //    23: dconst_0       
        //    24: dconst_0       
        //    25: invokevirtual   net/minecraft/client/entity/EntityPlayerSP.setVelocity:(DDD)V
        //    28: aload_0        
        //    29: invokespecial   me/rebirthclient/mod/modules/impl/exploit/PacketFly.checkHitBoxes:()Z
        //    32: istore          4
        //    34: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //    37: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //    40: getfield        net/minecraft/client/entity/EntityPlayerSP.movementInput:Lnet/minecraft/util/MovementInput;
        //    43: getfield        net/minecraft/util/MovementInput.jump:Z
        //    46: ifeq            135
        //    49: iload           4
        //    51: ifne            60
        //    54: invokestatic    me/rebirthclient/api/util/MovementUtil.isMoving:()Z
        //    57: ifne            135
        //    60: aload_0        
        //    61: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.flight:Lme/rebirthclient/mod/modules/settings/Setting;
        //    64: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //    67: checkcast       Ljava/lang/Boolean;
        //    70: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //    73: ifeq            129
        //    76: iload           4
        //    78: ifne            129
        //    81: aload_0        
        //    82: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.flightMode:Lme/rebirthclient/mod/modules/settings/Setting;
        //    85: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //    88: checkcast       Ljava/lang/Integer;
        //    91: invokevirtual   java/lang/Integer.intValue:()I
        //    94: ifne            113
        //    97: aload_0        
        //    98: goto            107
        //   101: ldc2_w          -0.032
        //   104: goto            196
        //   107: ldc2_w          0.062
        //   110: goto            196
        //   113: aload_0        
        //   114: goto            123
        //   117: ldc2_w          -0.032
        //   120: goto            196
        //   123: ldc2_w          0.062
        //   126: goto            196
        //   129: ldc2_w          0.062
        //   132: goto            196
        //   135: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   138: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   141: getfield        net/minecraft/client/entity/EntityPlayerSP.movementInput:Lnet/minecraft/util/MovementInput;
        //   144: getfield        net/minecraft/util/MovementInput.sneak:Z
        //   147: ifeq            156
        //   150: ldc2_w          -0.062
        //   153: goto            196
        //   156: iload           4
        //   158: ifne            195
        //   161: aload_0        
        //   162: goto            191
        //   165: aload_0        
        //   166: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.flight:Lme/rebirthclient/mod/modules/settings/Setting;
        //   169: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   172: checkcast       Ljava/lang/Boolean;
        //   175: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //   178: ifeq            187
        //   181: ldc2_w          -0.04
        //   184: goto            196
        //   187: dconst_0       
        //   188: goto            196
        //   191: dconst_0       
        //   192: goto            196
        //   195: dconst_0       
        //   196: dstore_2       
        //   197: iload           4
        //   199: ifeq            230
        //   202: invokestatic    me/rebirthclient/api/util/MovementUtil.isMoving:()Z
        //   205: ifeq            230
        //   208: dload_2        
        //   209: dconst_0       
        //   210: dcmpl          
        //   211: ifeq            230
        //   214: dload_2        
        //   215: aload_0        
        //   216: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.antiFactor:Lme/rebirthclient/mod/modules/settings/Setting;
        //   219: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   222: checkcast       Ljava/lang/Double;
        //   225: invokevirtual   java/lang/Double.doubleValue:()D
        //   228: ddiv           
        //   229: dstore_2       
        //   230: aload_0        
        //   231: aload_0        
        //   232: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.strafeFactor:Lme/rebirthclient/mod/modules/settings/Setting;
        //   235: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   238: checkcast       Ljava/lang/Boolean;
        //   241: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //   244: ifeq            258
        //   247: iload           4
        //   249: ifeq            258
        //   252: ldc2_w          0.031
        //   255: goto            261
        //   258: ldc2_w          0.26
        //   261: invokespecial   me/rebirthclient/mod/modules/impl/exploit/PacketFly.getMotion:(D)[D
        //   264: astore          5
        //   266: iconst_1       
        //   267: istore          6
        //   269: iload           6
        //   271: aload_0        
        //   272: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.loops:Lme/rebirthclient/mod/modules/settings/Setting;
        //   275: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   278: checkcast       Ljava/lang/Integer;
        //   281: invokevirtual   java/lang/Integer.intValue:()I
        //   284: iconst_1       
        //   285: iadd           
        //   286: if_icmpge       413
        //   289: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   292: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   295: aload           5
        //   297: iconst_0       
        //   298: daload         
        //   299: iload           6
        //   301: i2d            
        //   302: dmul           
        //   303: aload_0        
        //   304: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.extraFactor:Lme/rebirthclient/mod/modules/settings/Setting;
        //   307: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   310: checkcast       Ljava/lang/Double;
        //   313: invokevirtual   java/lang/Double.doubleValue:()D
        //   316: dmul           
        //   317: putfield        net/minecraft/client/entity/EntityPlayerSP.motionX:D
        //   320: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   323: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   326: dload_2        
        //   327: iload           6
        //   329: i2d            
        //   330: dmul           
        //   331: putfield        net/minecraft/client/entity/EntityPlayerSP.motionY:D
        //   334: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   337: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   340: aload           5
        //   342: iconst_1       
        //   343: daload         
        //   344: iload           6
        //   346: i2d            
        //   347: dmul           
        //   348: aload_0        
        //   349: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.extraFactor:Lme/rebirthclient/mod/modules/settings/Setting;
        //   352: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   355: checkcast       Ljava/lang/Double;
        //   358: invokevirtual   java/lang/Double.doubleValue:()D
        //   361: dmul           
        //   362: putfield        net/minecraft/client/entity/EntityPlayerSP.motionZ:D
        //   365: aload_0        
        //   366: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   369: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   372: getfield        net/minecraft/client/entity/EntityPlayerSP.motionX:D
        //   375: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   378: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   381: getfield        net/minecraft/client/entity/EntityPlayerSP.motionY:D
        //   384: getstatic       me/rebirthclient/mod/modules/impl/exploit/PacketFly.mc:Lnet/minecraft/client/Minecraft;
        //   387: getfield        net/minecraft/client/Minecraft.player:Lnet/minecraft/client/entity/EntityPlayerSP;
        //   390: getfield        net/minecraft/client/entity/EntityPlayerSP.motionZ:D
        //   393: aload_0        
        //   394: getfield        me/rebirthclient/mod/modules/impl/exploit/PacketFly.sendTeleport:Lme/rebirthclient/mod/modules/settings/Setting;
        //   397: invokevirtual   me/rebirthclient/mod/modules/settings/Setting.getValue:()Ljava/lang/Object;
        //   400: checkcast       Ljava/lang/Boolean;
        //   403: invokevirtual   java/lang/Boolean.booleanValue:()Z
        //   406: invokespecial   me/rebirthclient/mod/modules/impl/exploit/PacketFly.sendPackets:(DDDZ)V
        //   409: iinc            6, 1
        //   412: return         
        //   413: return         
        // 
        // The error that occurred was:
        // 
        // java.lang.IllegalStateException: Inconsistent stack size at #0196 (coming from #0192).
        //     at com.strobel.decompiler.ast.AstBuilder.performStackAnalysis(AstBuilder.java:2183)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:108)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:211)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:782)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:675)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:552)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:519)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:161)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:150)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:125)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.Decompiler.decompile(Decompiler.java:70)
        //     at org.ugp.mc.deobfuscator.Deobfuscator3000.decompile(Deobfuscator3000.java:538)
        //     at org.ugp.mc.deobfuscator.Deobfuscator3000.decompileAndDeobfuscate(Deobfuscator3000.java:552)
        //     at org.ugp.mc.deobfuscator.Deobfuscator3000.processMod(Deobfuscator3000.java:510)
        //     at org.ugp.mc.deobfuscator.Deobfuscator3000.lambda$21(Deobfuscator3000.java:329)
        //     at java.lang.Thread.run(Thread.java:750)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    @SubscribeEvent
    public void onPacketSend(final PacketEvent.Send send) {
        if (fullNullCheck()) {
            return;
        }
        if (send.getPacket() instanceof CPacketPlayer && !this.packets.remove(send.getPacket())) {
            if (send.getPacket() instanceof CPacketPlayer.Rotation && !(boolean)this.antiRotation.getValue()) {
                return;
            }
            send.setCanceled(true);
        }
    }
    
    @SubscribeEvent
    public void onReceivePacket(final PacketEvent.Receive receive) {
        if (fullNullCheck()) {
            return;
        }
        if (receive.isCanceled()) {
            return;
        }
        if (receive.getPacket() instanceof SPacketPlayerPosLook) {
            final SPacketPlayerPosLook sPacketPlayerPosLook = (SPacketPlayerPosLook)receive.getPacket();
            if (PacketFly.mc.player.isEntityAlive() && PacketFly.mc.world.isBlockLoaded(new BlockPos(PacketFly.mc.player.posX, PacketFly.mc.player.posY, PacketFly.mc.player.posZ), false) && !(PacketFly.mc.currentScreen instanceof GuiDownloadTerrain) && (boolean)this.clearIDs.getValue()) {
                this.teleportmap.remove(sPacketPlayerPosLook.getTeleportId());
            }
            if (this.setID.getValue()) {
                this.teleportID = sPacketPlayerPosLook.getTeleportId();
            }
        }
    }
    
    private boolean lambda$onTick$1(final Map.Entry entry) {
        return (boolean)this.clearMap.getValue() && entry.getValue().getTimer().passed((long)(int)this.clearTime.getValue());
    }
    
    @SubscribeEvent
    public void onMove(final MoveEvent moveEvent) {
        if (fullNullCheck()) {
            return;
        }
        if ((boolean)this.setMove.getValue() && this.flightCounter != 0) {
            moveEvent.setX(PacketFly.mc.player.motionX);
            moveEvent.setY(PacketFly.mc.player.motionY);
            moveEvent.setZ(PacketFly.mc.player.motionZ);
            if ((boolean)this.nocliperino.getValue() && this != 0) {
                PacketFly.mc.player.noClip = true;
            }
        }
    }
    
    private void teleportPacket(final Vec3d vec3d, final boolean b) {
        if (b) {
            PacketFly.mc.player.connection.sendPacket((Packet)new CPacketConfirmTeleport(++this.teleportID));
            this.teleportmap.put(this.teleportID, new IDtime(vec3d, new Timer()));
        }
    }
    
    private void sendPackets(final double n, final double n2, final double n3, final boolean b) {
        final Vec3d add = PacketFly.mc.player.getPositionVector().add(new Vec3d(n, n2, n3));
        final Vec3d outOfBoundsVec = this.outOfBoundsVec(add);
        this.packetSender((CPacketPlayer)new CPacketPlayer.Position(add.x, add.y, add.z, PacketFly.mc.player.onGround));
        if (this.invalidPacket.getValue()) {
            this.packetSender((CPacketPlayer)new CPacketPlayer.Position(outOfBoundsVec.x, outOfBoundsVec.y, outOfBoundsVec.z, PacketFly.mc.player.onGround));
        }
        if (this.setPos.getValue()) {
            PacketFly.mc.player.setPosition(add.x, add.y, add.z);
        }
        this.teleportPacket(add, b);
    }
    
    private Vec3d outOfBoundsVec(final Vec3d vec3d) {
        return vec3d.add(0.0, 1337.0, 0.0);
    }
    
    @Override
    public void onTick() {
        this.teleportmap.entrySet().removeIf(this::lambda$onTick$1);
    }
    
    public static class IDtime
    {
        private final Vec3d pos;
        private final Timer timer;
        
        public Vec3d getPos() {
            return this.pos;
        }
        
        public Timer getTimer() {
            return this.timer;
        }
        
        public IDtime(final Vec3d pos, final Timer timer) {
            this.pos = pos;
            (this.timer = timer).reset();
        }
    }
}
